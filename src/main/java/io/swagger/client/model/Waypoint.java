/*
 * Strava API v3
 * The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.LatLng;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Waypoint
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2025-05-20T09:05:48.485+02:00")
public class Waypoint {
  @SerializedName("latlng")
  private LatLng latlng = null;

  @SerializedName("target_latlng")
  private LatLng targetLatlng = null;

  @SerializedName("categories")
  private List<String> categories = null;

  @SerializedName("title")
  private String title = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("distance_into_route")
  private Integer distanceIntoRoute = null;

  public Waypoint latlng(LatLng latlng) {
    this.latlng = latlng;
    return this;
  }

   /**
   * The location along the route that the waypoint is closest to
   * @return latlng
  **/
  @ApiModelProperty(value = "The location along the route that the waypoint is closest to")
  public LatLng getLatlng() {
    return latlng;
  }

  public void setLatlng(LatLng latlng) {
    this.latlng = latlng;
  }

  public Waypoint targetLatlng(LatLng targetLatlng) {
    this.targetLatlng = targetLatlng;
    return this;
  }

   /**
   * A location off of the route that the waypoint is (optional)
   * @return targetLatlng
  **/
  @ApiModelProperty(value = "A location off of the route that the waypoint is (optional)")
  public LatLng getTargetLatlng() {
    return targetLatlng;
  }

  public void setTargetLatlng(LatLng targetLatlng) {
    this.targetLatlng = targetLatlng;
  }

  public Waypoint categories(List<String> categories) {
    this.categories = categories;
    return this;
  }

  public Waypoint addCategoriesItem(String categoriesItem) {
    if (this.categories == null) {
      this.categories = new ArrayList<String>();
    }
    this.categories.add(categoriesItem);
    return this;
  }

   /**
   * Categories that the waypoint belongs to
   * @return categories
  **/
  @ApiModelProperty(value = "Categories that the waypoint belongs to")
  public List<String> getCategories() {
    return categories;
  }

  public void setCategories(List<String> categories) {
    this.categories = categories;
  }

  public Waypoint title(String title) {
    this.title = title;
    return this;
  }

   /**
   * A title for the waypoint
   * @return title
  **/
  @ApiModelProperty(value = "A title for the waypoint")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public Waypoint description(String description) {
    this.description = description;
    return this;
  }

   /**
   * A description of the waypoint (optional)
   * @return description
  **/
  @ApiModelProperty(value = "A description of the waypoint (optional)")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Waypoint distanceIntoRoute(Integer distanceIntoRoute) {
    this.distanceIntoRoute = distanceIntoRoute;
    return this;
  }

   /**
   * The number meters along the route that the waypoint is located
   * @return distanceIntoRoute
  **/
  @ApiModelProperty(value = "The number meters along the route that the waypoint is located")
  public Integer getDistanceIntoRoute() {
    return distanceIntoRoute;
  }

  public void setDistanceIntoRoute(Integer distanceIntoRoute) {
    this.distanceIntoRoute = distanceIntoRoute;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Waypoint waypoint = (Waypoint) o;
    return Objects.equals(this.latlng, waypoint.latlng) &&
        Objects.equals(this.targetLatlng, waypoint.targetLatlng) &&
        Objects.equals(this.categories, waypoint.categories) &&
        Objects.equals(this.title, waypoint.title) &&
        Objects.equals(this.description, waypoint.description) &&
        Objects.equals(this.distanceIntoRoute, waypoint.distanceIntoRoute);
  }

  @Override
  public int hashCode() {
    return Objects.hash(latlng, targetLatlng, categories, title, description, distanceIntoRoute);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Waypoint {\n");
    
    sb.append("    latlng: ").append(toIndentedString(latlng)).append("\n");
    sb.append("    targetLatlng: ").append(toIndentedString(targetLatlng)).append("\n");
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    distanceIntoRoute: ").append(toIndentedString(distanceIntoRoute)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

