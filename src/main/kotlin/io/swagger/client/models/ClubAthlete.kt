/**
* Strava API v3
* The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.
*
* OpenAPI spec version: 3.0.0
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
package io.swagger.client.models


/**
 * 
 * @param resourceState Resource state, indicates level of detail. Possible values: 1 -> \"meta\", 2 -> \"summary\", 3 -> \"detail\"
 * @param firstname The athlete's first name.
 * @param lastname The athlete's last initial.
 * @param member The athlete's member status.
 * @param admin Whether the athlete is a club admin.
 * @param owner Whether the athlete is club owner.
 */
data class ClubAthlete (
    /* Resource state, indicates level of detail. Possible values: 1 -> \"meta\", 2 -> \"summary\", 3 -> \"detail\" */
    val resourceState: kotlin.Int? = null,
    /* The athlete's first name. */
    val firstname: kotlin.String? = null,
    /* The athlete's last initial. */
    val lastname: kotlin.String? = null,
    /* The athlete's member status. */
    val member: kotlin.String? = null,
    /* Whether the athlete is a club admin. */
    val admin: kotlin.Boolean? = null,
    /* Whether the athlete is club owner. */
    val owner: kotlin.Boolean? = null,
) {

}

