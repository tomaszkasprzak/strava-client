/**
* Strava API v3
* The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.
*
* OpenAPI spec version: 3.0.0
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
package io.swagger.client.models

import io.swagger.client.models.ActivityTotal

/**
 * A set of rolled-up statistics and totals for an athlete
 * @param biggestRideDistance The longest distance ridden by the athlete.
 * @param biggestClimbElevationGain The highest climb ridden by the athlete.
 * @param recentRideTotals The recent (last 4 weeks) ride stats for the athlete.
 * @param recentRunTotals The recent (last 4 weeks) run stats for the athlete.
 * @param recentSwimTotals The recent (last 4 weeks) swim stats for the athlete.
 * @param ytdRideTotals The year to date ride stats for the athlete.
 * @param ytdRunTotals The year to date run stats for the athlete.
 * @param ytdSwimTotals The year to date swim stats for the athlete.
 * @param allRideTotals The all time ride stats for the athlete.
 * @param allRunTotals The all time run stats for the athlete.
 * @param allSwimTotals The all time swim stats for the athlete.
 */
data class ActivityStats (
    /* The longest distance ridden by the athlete. */
    val biggestRideDistance: kotlin.Double? = null,
    /* The highest climb ridden by the athlete. */
    val biggestClimbElevationGain: kotlin.Double? = null,
    /* The recent (last 4 weeks) ride stats for the athlete. */
    val recentRideTotals: ActivityTotal? = null,
    /* The recent (last 4 weeks) run stats for the athlete. */
    val recentRunTotals: ActivityTotal? = null,
    /* The recent (last 4 weeks) swim stats for the athlete. */
    val recentSwimTotals: ActivityTotal? = null,
    /* The year to date ride stats for the athlete. */
    val ytdRideTotals: ActivityTotal? = null,
    /* The year to date run stats for the athlete. */
    val ytdRunTotals: ActivityTotal? = null,
    /* The year to date swim stats for the athlete. */
    val ytdSwimTotals: ActivityTotal? = null,
    /* The all time ride stats for the athlete. */
    val allRideTotals: ActivityTotal? = null,
    /* The all time run stats for the athlete. */
    val allRunTotals: ActivityTotal? = null,
    /* The all time swim stats for the athlete. */
    val allSwimTotals: ActivityTotal? = null,
) {

}

