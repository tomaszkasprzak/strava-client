/**
* Strava API v3
* The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.
*
* OpenAPI spec version: 3.0.0
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
package io.swagger.client.models

import io.swagger.client.models.ActivityType
import io.swagger.client.models.MetaAthlete
import io.swagger.client.models.SportType

/**
 * 
 * @param athlete 
 * @param name The name of the activity
 * @param distance The activity's distance, in meters
 * @param movingTime The activity's moving time, in seconds
 * @param elapsedTime The activity's elapsed time, in seconds
 * @param totalElevationGain The activity's total elevation gain.
 * @param type Deprecated. Prefer to use sport_type
 * @param sportType 
 * @param workoutType The activity's workout type
 */
data class ClubActivity (
    val athlete: MetaAthlete? = null,
    /* The name of the activity */
    val name: kotlin.String? = null,
    /* The activity's distance, in meters */
    val distance: kotlin.Float? = null,
    /* The activity's moving time, in seconds */
    val movingTime: kotlin.Int? = null,
    /* The activity's elapsed time, in seconds */
    val elapsedTime: kotlin.Int? = null,
    /* The activity's total elevation gain. */
    val totalElevationGain: kotlin.Float? = null,
    /* Deprecated. Prefer to use sport_type */
    val type: ActivityType? = null,
    val sportType: SportType? = null,
    /* The activity's workout type */
    val workoutType: kotlin.Int? = null,
) {

}

